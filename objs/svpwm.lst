C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 1   


C166 COMPILER V7.57.0, COMPILATION OF MODULE SVPWM
OBJECT MODULE PLACED IN .\objs\svpwm.obj
COMPILER INVOKED BY: C:\Keil_v5\C166\BIN\C166.EXE src\svpwm.c MODV2 LARGE BROWSE INCDIR(.\src\hardware;.\src;.\EOL_Diag;
                    -.\DTC_Diag;.\Hw_Driver;.\CalTool;.\DTC_Diag\mcu2_prot;./CAN_Driver;.\xcp;.\src\include;.\EBS_Ctrl_Logic) MODV2 DEBUG COD
                    -E PRINT(.\objs\svpwm.lst) TABS(2) OBJECT(.\objs\svpwm.obj) 

 stmt lvl     source

    1         ////////////////////////////////////////////////////////////////////////////////
    2         /*******************************************************************************
    3         * 
    4         *
    5         *  
    6         *    
    7         *******************************************************************************/
    8         ////////////////////////////////////////////////////////////////////////////////
    9         
   10         #include "svpwm.h"
   11         #include "motor.h"
   12         
   13         #include "sin_data.h"
   14         
   15         ////////////////////////////////////////////////////////////////////////////////
   16         #define Lq           0.0002 //0.002
   17         #define Ld           0.0002
   18         #define flux         0.02 //0.2
   19         #define Rs           0.1  //0.01 not rot//1
   20         
   21         ////////////////////////////////////////////////////////////////////////////////
   22         // The duty
   23         u16 g_duty0;
   24         u16 g_duty1;
   25         u16 g_duty2;
   26         
   27         // The duty applied to Phase A/B/C
   28         u16 g_duty_A;
   29         u16 g_duty_B;
   30         u16 g_duty_C;
   31         
   32         ////////////////////////////////////////////////////////////////////////////////
   33         //clark transformation, containing(K=2/3),ensuring the peak and RMS of Voltage is equal
   34         ////////////////////////////////////////////////////////////////////////////////
   35         void Clark(I_CLARK_PARK *I)
   36         {
   37  1        UNUSED_PARA(I);
   38  1        
   39  1        // I->Alpha = _IQmpy(((I->As*2)- I->Bs - I->Cs),_IQ(ONEbyTHREE)); // 2/3(ua-1/2ub-1/2uc)
   40  1        // I->Beta  = _IQmpy((I->Bs - I->Cs),_IQ(ONEbySQRT3));        // sqrt3/3(ub-uc)
   41  1      }
   42         
   43         ////////////////////////////////////////////////////////////////////////////////
   44         //
   45         ////////////////////////////////////////////////////////////////////////////////
   46         void Park(I_CLARK_PARK *I)
   47         {
   48  1        if(I->Angle<=F_ANGLE(90))
   49  1        {
   50  2          I->Sine   = g_sin_value[I->Angle];
   51  2          I->Cosine = g_sin_value[F_ANGLE(90)-I->Angle];
   52  2        }
   53  1        else if(I->Angle<=F_ANGLE(180))
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 2   

   54  1        {
   55  2          I->Sine   =  g_sin_value[F_ANGLE(180)-I->Angle];
   56  2          I->Cosine = -g_sin_value[I->Angle-F_ANGLE(90)];
   57  2        }
   58  1        else if(I->Angle<=F_ANGLE(270))
   59  1        {
   60  2          I->Sine   = -g_sin_value[I->Angle-F_ANGLE(180)];
   61  2          I->Cosine = -g_sin_value[F_ANGLE(270)-I->Angle];
   62  2        }
   63  1        else
   64  1        {
   65  2          I->Sine   = -g_sin_value[F_ANGLE(360)-I->Angle];
   66  2          I->Cosine =  g_sin_value[I->Angle-F_ANGLE(270)];
   67  2        }
   68  1      }
   69         
   70         ////////////////////////////////////////////////////////////////////////////////
   71         // https://blog.csdn.net/daidi1989/article/details/89945557
   72         ////////////////////////////////////////////////////////////////////////////////
   73         void IPark(V_CLARK_PARK *v)
   74         {
   75  1        v->Alpha = (v->Ds * v->Cosine) - (v->Qs * v->Sine);
   76  1        v->Alpha/=100000;
   77  1        v->Beta  = (v->Ds * v->Sine) + (v->Qs * v->Cosine); 
   78  1        v->Beta/=100000;
   79  1      }
   80         
   81         ////////////////////////////////////////////////////////////////////////////////
   82         // Reference: "SVPWM Pricipal and Control version5...pdf"
   83         ////////////////////////////////////////////////////////////////////////////////
   84         void motor_sector_cal(V_CLARK_PARK *v)
   85         {
   86  1        const u8 l_sector_idx[7]={0,2,6,1,4,3,5};
   87  1        
   88  1        // Determine the sector of Uref
   89  1        v->N=0;
   90  1        v->tmp1 = v->Beta;
   91  1        v->tmp2 =  (1732 * v->Alpha)/1000 - v->Beta;   // (sqrt(3)v->Alpha-v->Beta)/2  : 1732=1.732*1000: sqrt(3)=
             -1.732
   92  1        v->tmp3 = -(1732 * v->Alpha)/1000 - v->Beta;   // -(sqrt(3)v->Alpha+v->Beta)/2
   93  1        
   94  1        if (v->tmp1>0)   // A=1 ,else A=0
   95  1          v->N=v->N+1; 
   96  1        if (v->tmp2>0)   // B=1 ,else B=0
   97  1          v->N=v->N+2;
   98  1        if (v->tmp3>0)   // C=1 ,else C=0
   99  1          v->N=v->N+4; // vector parameter N=A+2B+4C
  100  1        
  101  1        if(v->N>=1 && v->N<=6)
  102  1          v->VecSector=l_sector_idx[v->N];
  103  1      }
  104         
  105         ////////////////////////////////////////////////////////////////////////////////
  106         // PWM generate function, according to current Alpha and Beta aixs voltage
  107         // Reference: Study on DSP based PMSM Control...caj
  108         ////////////////////////////////////////////////////////////////////////////////
  109         void motor_sector_switch_cal(V_CLARK_PARK *v)
  110         {
  111  1        // Temp varable, if T1 + T2 >Ts, overmodulated
  112  1        s16 T1,T2;
  113  1        s32 l_tmps32_a;
  114  1        s32 l_tmps32_b;
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 3   

  115  1        s32 l_tmps32;
  116  1        
  117  1        // Time slot resolution: 0.1us/bit
  118  1        v->Ttmp= (1732UL*Ts)/2/Udc;                 // (sqrt3*Ts)/(2*Udc)
  119  1        v->Tx  = (s16)(v->Ttmp*v->Beta*2/1000);         // (sqrt3*Ts*v->Beta)/Udc
  120  1        
  121  1        // v->Ty  = (1000*v->Beta + 1732*v->Alpha)*v->Ttmp/1000;  // (sqrt3*Ts)/(2*Udc)*(sqrt3*v->Alpha+v->Beta)
  122  1        // v->Tz  = (1000*v->Beta - 1732*v->Alpha)*v->Ttmp/1000;  // (sqrt3*Ts)/(2*Udc)*(-sqrt3*v->Alpha+v->Beta)
  123  1        l_tmps32_a = v->Alpha * v->Ttmp * 1732 / 1000;
  124  1        l_tmps32_b = v->Beta * v->Ttmp;
  125  1        v->Ty = (s16)((l_tmps32_b + l_tmps32_a)/1000);
  126  1        v->Tz = (s16)((l_tmps32_b - l_tmps32_a)/1000);
  127  1        
  128  1        // According to the sector, decide the current conducting time of two vectors
  129  1        switch (v->VecSector)
  130  1        {
  131  2        case 1: // sector 1
  132  2          T1= -v->Tz; // vector(A B C) 1 0 0
  133  2          T2=  v->Tx; // vector(A B C) 1 1 0
  134  2          break;
  135  2        case 2: // sector 2
  136  2          T1=  v->Tz; // vector(A B C) 0 1 0
  137  2          T2=  v->Ty; // vector(A B C) 1 1 0
  138  2          break;
  139  2        case 3: // sector 3
  140  2          T1=  v->Tx; // vector(A B C) 0 1 0
  141  2          T2= -v->Ty; // vector(A B C) 0 1 1
  142  2          break;
  143  2        case 4: // sector 4
  144  2          T1= -v->Tx; // vector(A B C) 0 0 1
  145  2          T2=  v->Tz; // vector(A B C) 0 1 1
  146  2          break;
  147  2        case 5: // sector 5
  148  2          T1= -v->Ty; // vector(A B C) 0 0 1
  149  2          T2= -v->Tz; // vector(A B C) 1 0 1
  150  2          break;
  151  2        case 6: // sector 6
  152  2          T1=  v->Ty; // vector(A B C) 1 0 0
  153  2          T2= -v->Tx; // vector(A B C) 1 0 1
  154  2          break;
  155  2        }
  156  1        
  157  1        if(T1<0 || T2<0)
  158  1        {
  159  2          // Something wrong happends...
  160  2        }
  161  1        
  162  1        // When T1+T2>Ts, need to be normalized
  163  1        if (T1+ T2> Ts) // over modulated
  164  1        {
  165  2          l_tmps32=Ts; l_tmps32*=T1; l_tmps32/=(T1+T2);
  166  2          v->T1= (u16)l_tmps32;
  167  2          l_tmps32=Ts; l_tmps32*=T2; l_tmps32/=(T1+T2);
  168  2          v->T2= (u16)l_tmps32;
  169  2        }
  170  1        else
  171  1        {
  172  2          v->T1=(u16)T1;
  173  2          v->T2=(u16)T2;
  174  2        }
  175  1        ////////////////////////////////////////////////////////
  176  1        // Conducting phase switch moment: 1st, 2nd, 3rd
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 4   

  177  1        v->Ta= (Ts- v->T1- v->T2)>>2;  // (Ts-T1-T2)/4
  178  1        v->Tb= v->Ta + (v->T1>>1);     // (Ts-T1-T2)/4+T1/2
  179  1        v->Tc= v->Tb + (v->T2>>1);     // (Ts-T1-T2)/4+T1/2+T2/2
  180  1        
  181  1        ////////////////////////////////////////////////////////
  182  1        // switching time: 0.1%/bit, factor=10
  183  1        g_duty0=(u16)(1000 - (2000UL* v->Ta) / Ts); //(1-2Ta/Ts)*100
  184  1        g_duty1=(u16)(1000 - (2000UL* v->Tb) / Ts); //(1-2Tb/Ts)*100
  185  1        g_duty2=(u16)(1000 - (2000UL* v->Tc) / Ts); //(1-2Tc/Ts)*100
  186  1        
  187  1        if(g_duty0>2000)
  188  1          g_duty0=g_duty0;
  189  1        
  190  1        ////////////////////////////////////////////////////////
  191  1        // Determine the current conducting time of two vectors
  192  1        switch (v->VecSector)
  193  1        {
  194  2        case 1: // sector 1   0-A-AB-0-0-AB-A-0
  195  2          g_duty_A = g_duty2;
  196  2          g_duty_B = g_duty1;
  197  2          g_duty_C = g_duty0;
  198  2          break;
  199  2        case 2: // sector 2   0-B-AB-0-0-AB-B-0
  200  2          g_duty_A = g_duty2;
  201  2          g_duty_B = g_duty0;
  202  2          g_duty_C = g_duty1;
  203  2          break;
  204  2        case 3: // sector 3   0-B-BC-0-0-BC-B-0
  205  2          g_duty_A = g_duty1;
  206  2          g_duty_B = g_duty0;
  207  2          g_duty_C = g_duty2;
  208  2          break;
  209  2        case 4: // sector 4   0-C-BC-0-0-BC-C-0
  210  2          g_duty_A = g_duty0;
  211  2          g_duty_B = g_duty1;
  212  2          g_duty_C = g_duty2;
  213  2          break;
  214  2        case 5: // sector 5   0-C-CA-0-0-CA-C-0
  215  2          g_duty_A = g_duty0;
  216  2          g_duty_B = g_duty2;
  217  2          g_duty_C = g_duty1;
  218  2          break;
  219  2        case 6: // sector 6   0-A-AC-0-0-AC-A-0
  220  2          g_duty_A = g_duty1;
  221  2          g_duty_B = g_duty2;
  222  2          g_duty_C = g_duty0;
  223  2          break;
  224  2          
  225  2        default:
  226  2          break;
  227  2        }
  228  1        ////////////////////////////////////////////////////////
  229  1        update_pwm1_duty(g_duty_A);
  230  1        update_pwm2_duty(g_duty_B);
  231  1        update_pwm3_duty(g_duty_C);
  232  1        ////////////////////////////////////////////////////////
  233  1      }
  234         ////////////////////////////////////////////////////////////////////////////////
  235         
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Clark (BEGIN  RMASK = @0x4000)
                                           ; SOURCE LINE # 35
;---- Variable 'I' assigned to Register 'R8/R9' ----
                                           ; SOURCE LINE # 41
0000 DB00          RETS      
             ; FUNCTION Clark (END    RMASK = @0x4000)

             ; FUNCTION Park (BEGIN  RMASK = @0x5CF0)
                                           ; SOURCE LINE # 46
;---- Variable 'I' assigned to Register 'R8/R9' ----
                                           ; SOURCE LINE # 48
0002 DC49          EXTP      R9,#01H
0004 D4A80E00      MOV       R10,[R8+#POF(0EH)]
0008 46FA8403      CMP       R10,#0384H
000C ED1D          JMPR      cc_UGT,?C0001
                                           ; SOURCE LINE # 50
000E F05A          MOV       R5,R10
0010 5C25          SHL       R5,#02H
0012 D7500000 E    EXTP      #PAG (g_sin_value),#02H
0016 D4650000 E    MOV       R6,[R5+#POF(g_sin_value)]
001A D4750200 E    MOV       R7,[R5+#POF(g_sin_value+02H)]
001E DC69          EXTP      R9,#03H
0020 C4681000      MOV       [R8+#POF(010H)],R6
0024 C4781200      MOV       [R8+#POF(012H)],R7
                                           ; SOURCE LINE # 51
0028 D4480E00      MOV       R4,[R8+#POF(0EH)]
002C 8140          NEG       R4
002E 5C24          SHL       R4,#02H
0030 D7500000 E    EXTP      #PAG (g_sin_value),#02H
0034 D464100E E    MOV       R6,[R4+#POF(g_sin_value+0E10H)]
0038 D474120E E    MOV       R7,[R4+#POF(g_sin_value+0E12H)]
003C DC59          EXTP      R9,#02H
003E C4681400      MOV       [R8+#POF(014H)],R6
0042 C4781600      MOV       [R8+#POF(016H)],R7
                                           ; SOURCE LINE # 52
0046 DB00          RETS      
0048         ?C0001:
                                           ; SOURCE LINE # 53
0048 46FA0807      CMP       R10,#0708H
004C ED21          JMPR      cc_UGT,?C0003
                                           ; SOURCE LINE # 55
004E F0BA          MOV       R11,R10
0050 81B0          NEG       R11
0052 F04B          MOV       R4,R11
0054 5C24          SHL       R4,#02H
0056 D7500000 E    EXTP      #PAG (g_sin_value),#02H
005A D464201C E    MOV       R6,[R4+#POF(g_sin_value+01C20H)]
005E D474221C E    MOV       R7,[R4+#POF(g_sin_value+01C22H)]
0062 DC69          EXTP      R9,#03H
0064 C4681000      MOV       [R8+#POF(010H)],R6
0068 C4781200      MOV       [R8+#POF(012H)],R7
                                           ; SOURCE LINE # 56
006C D4480E00      MOV       R4,[R8+#POF(0EH)]
0070 5C24          SHL       R4,#02H
0072 D7500000 E    EXTP      #PAG (g_sin_value),#02H
0076 D464F0F1 E    MOV       R6,[R4+#POF(g_sin_value+0F1F0H)]
007A D474F2F1 E    MOV       R7,[R4+#POF(g_sin_value+0F1F2H)]
007E 8160          NEG       R6
0080 1870          ADDC      R7,#00H
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 6   

0082 8170          NEG       R7
0084 DC59          EXTP      R9,#02H
0086 C4681400      MOV       [R8+#POF(014H)],R6
008A C4781600      MOV       [R8+#POF(016H)],R7
                                           ; SOURCE LINE # 57
008E DB00          RETS      
0090         ?C0003:
                                           ; SOURCE LINE # 58
0090 46FA8C0A      CMP       R10,#0A8CH
0094 ED23          JMPR      cc_UGT,?C0005
                                           ; SOURCE LINE # 60
0096 F0CA          MOV       R12,R10
0098 5C2C          SHL       R12,#02H
009A D7500000 E    EXTP      #PAG (g_sin_value),#02H
009E D46CE0E3 E    MOV       R6,[R12+#POF(g_sin_value+0E3E0H)]
00A2 D47CE2E3 E    MOV       R7,[R12+#POF(g_sin_value+0E3E2H)]
00A6 8160          NEG       R6
00A8 1870          ADDC      R7,#00H
00AA 8170          NEG       R7
00AC DC69          EXTP      R9,#03H
00AE C4681000      MOV       [R8+#POF(010H)],R6
00B2 C4781200      MOV       [R8+#POF(012H)],R7
                                           ; SOURCE LINE # 61
00B6 D4480E00      MOV       R4,[R8+#POF(0EH)]
00BA 8140          NEG       R4
00BC 5C24          SHL       R4,#02H
00BE D7500000 E    EXTP      #PAG (g_sin_value),#02H
00C2 D464302A E    MOV       R6,[R4+#POF(g_sin_value+02A30H)]
00C6 D474322A E    MOV       R7,[R4+#POF(g_sin_value+02A32H)]
00CA 8160          NEG       R6
00CC 1870          ADDC      R7,#00H
00CE 8170          NEG       R7
00D0 DC59          EXTP      R9,#02H
00D2 C4681400      MOV       [R8+#POF(014H)],R6
00D6 C4781600      MOV       [R8+#POF(016H)],R7
                                           ; SOURCE LINE # 62
00DA DB00          RETS      
00DC         ?C0005:
                                           ; SOURCE LINE # 65
00DC 81A0          NEG       R10
00DE F04A          MOV       R4,R10
00E0 5C24          SHL       R4,#02H
00E2 D7500000 E    EXTP      #PAG (g_sin_value),#02H
00E6 D4644038 E    MOV       R6,[R4+#POF(g_sin_value+03840H)]
00EA D4744238 E    MOV       R7,[R4+#POF(g_sin_value+03842H)]
00EE 8160          NEG       R6
00F0 1870          ADDC      R7,#00H
00F2 8170          NEG       R7
00F4 DC69          EXTP      R9,#03H
00F6 C4681000      MOV       [R8+#POF(010H)],R6
00FA C4781200      MOV       [R8+#POF(012H)],R7
                                           ; SOURCE LINE # 66
00FE D4480E00      MOV       R4,[R8+#POF(0EH)]
0102 5C24          SHL       R4,#02H
0104 D7500000 E    EXTP      #PAG (g_sin_value),#02H
0108 D464D0D5 E    MOV       R6,[R4+#POF(g_sin_value+0D5D0H)]
010C D474D2D5 E    MOV       R7,[R4+#POF(g_sin_value+0D5D2H)]
0110 DC59          EXTP      R9,#02H
0112 C4681400      MOV       [R8+#POF(014H)],R6
0116 C4781600      MOV       [R8+#POF(016H)],R7
                                           ; SOURCE LINE # 67
011A         ?C0002:
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 7   

                                           ; SOURCE LINE # 68
011A DB00          RETS      
             ; FUNCTION Park (END    RMASK = @0x5CF0)

             ; FUNCTION IPark (BEGIN  RMASK = @0x7DFE)
                                           ; SOURCE LINE # 73
011C ECFD          PUSH      R13
011E F0C8          MOV       R12,R8
0120 F0D9          MOV       R13,R9
;---- Variable 'v' assigned to Register 'R12/R13' ----
                                           ; SOURCE LINE # 75
0122 DC49          EXTP      R9,#01H
0124 D4481000      MOV       R4,[R8+#POF(010H)]
0128 F054          MOV       R5,R4
012A BCF5          ASHR      R5,#0FH
012C DC59          EXTP      R9,#02H
012E D4681400      MOV       R6,[R8+#POF(014H)]
0132 D4781600      MOV       R7,[R8+#POF(016H)]
0136 DA000000 E    CALLS     SEG (?C_LMUL),?C_LMUL
013A F0A4          MOV       R10,R4
013C F0B5          MOV       R11,R5
013E DC4D          EXTP      R13,#01H
0140 D44C0E00      MOV       R4,[R12+#POF(0EH)]
0144 F054          MOV       R5,R4
0146 BCF5          ASHR      R5,#0FH
0148 DC5D          EXTP      R13,#02H
014A D46C1800      MOV       R6,[R12+#POF(018H)]
014E D47C1A00      MOV       R7,[R12+#POF(01AH)]
0152 DA000000 E    CALLS     SEG (?C_LMUL),?C_LMUL
0156 F064          MOV       R6,R4
0158 F075          MOV       R7,R5
015A 206A          SUB       R6,R10
015C 307B          SUBC      R7,R11
015E DC5D          EXTP      R13,#02H
0160 C46C0600      MOV       [R12+#POF(06H)],R6
0164 C47C0800      MOV       [R12+#POF(08H)],R7
                                           ; SOURCE LINE # 76
0168 E6F6A086      MOV       R6,#086A0H
016C E017          MOV       R7,#01H
016E F0AC          MOV       R10,R12
0170 08A6          ADD       R10,#06H
0172 F0BD          MOV       R11,R13
0174 DC5D          EXTP      R13,#02H
0176 A84A          MOV       R4,[R10]
0178 D45A0200      MOV       R5,[R10+#POF(02H)]
017C DA000000 E    CALLS     SEG (?C_SLDIV),?C_SLDIV
0180 DC5B          EXTP      R11,#02H
0182 B84A          MOV       [R10],R4
0184 C45A0200      MOV       [R10+#POF(02H)],R5
                                           ; SOURCE LINE # 77
0188 DC4D          EXTP      R13,#01H
018A D44C1000      MOV       R4,[R12+#POF(010H)]
018E F054          MOV       R5,R4
0190 BCF5          ASHR      R5,#0FH
0192 DC5D          EXTP      R13,#02H
0194 D46C1800      MOV       R6,[R12+#POF(018H)]
0198 D47C1A00      MOV       R7,[R12+#POF(01AH)]
019C DA000000 E    CALLS     SEG (?C_LMUL),?C_LMUL
01A0 F0A4          MOV       R10,R4
01A2 F0B5          MOV       R11,R5
01A4 DC4D          EXTP      R13,#01H
01A6 D44C0E00      MOV       R4,[R12+#POF(0EH)]
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 8   

01AA F054          MOV       R5,R4
01AC BCF5          ASHR      R5,#0FH
01AE DC5D          EXTP      R13,#02H
01B0 D46C1400      MOV       R6,[R12+#POF(014H)]
01B4 D47C1600      MOV       R7,[R12+#POF(016H)]
01B8 DA000000 E    CALLS     SEG (?C_LMUL),?C_LMUL
01BC F064          MOV       R6,R4
01BE F075          MOV       R7,R5
01C0 006A          ADD       R6,R10
01C2 107B          ADDC      R7,R11
01C4 DC5D          EXTP      R13,#02H
01C6 C46C0A00      MOV       [R12+#POF(0AH)],R6
01CA C47C0C00      MOV       [R12+#POF(0CH)],R7
                                           ; SOURCE LINE # 78
01CE E6F6A086      MOV       R6,#086A0H
01D2 E017          MOV       R7,#01H
01D4 F0AC          MOV       R10,R12
01D6 06FA0A00      ADD       R10,#0AH
01DA F0BD          MOV       R11,R13
01DC DC5D          EXTP      R13,#02H
01DE A84A          MOV       R4,[R10]
01E0 D45A0200      MOV       R5,[R10+#POF(02H)]
01E4 DA000000 E    CALLS     SEG (?C_SLDIV),?C_SLDIV
01E8 DC5B          EXTP      R11,#02H
01EA B84A          MOV       [R10],R4
01EC C45A0200      MOV       [R10+#POF(02H)],R5
                                           ; SOURCE LINE # 79
01F0 FCFD          POP       R13
01F2 DB00          RETS      
             ; FUNCTION IPark (END    RMASK = @0x7DFE)

             ; FUNCTION motor_sector_cal (BEGIN  RMASK = @0x73FE)
                                           ; SOURCE LINE # 84
01F4 ECFD          PUSH      R13
01F6 F0C8          MOV       R12,R8
01F8 F0D9          MOV       R13,R9
;---- Variable 'v' assigned to Register 'R12/R13' ----
01FA 06F0F8FF      ADD       R0,#0FFF8H
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
01FE E6F40000 R    MOV       R4,#POF (?tpl?0001)
0202 E6F50000 R    MOV       R5,#PAG (?tpl?0001)
0206 F060          MOV       R6,R0
0208 E077          MOV       R7,#07H
020A DA000000 E    CALLS     SEG (?C_BCPYNF),?C_BCPYNF
                                           ; SOURCE LINE # 89
020E E006          MOV       R6,#00H
0210 DC7D          EXTP      R13,#04H
0212 C46C3E00      MOV       [R12+#POF(03EH)],R6
                                           ; SOURCE LINE # 90
0216 D46C0A00      MOV       R6,[R12+#POF(0AH)]
021A D47C0C00      MOV       R7,[R12+#POF(0CH)]
021E C46C3000      MOV       [R12+#POF(030H)],R6
0222 DC6D          EXTP      R13,#03H
0224 C47C3200      MOV       [R12+#POF(032H)],R7
                                           ; SOURCE LINE # 91
0228 D44C0600      MOV       R4,[R12+#POF(06H)]
022C D45C0800      MOV       R5,[R12+#POF(08H)]
0230 E6F6C406      MOV       R6,#06C4H
0234 E007          MOV       R7,#00H
0236 DA000000 E    CALLS     SEG (?C_LMUL),?C_LMUL
023A E6F6E803      MOV       R6,#03E8H
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 9   

023E E007          MOV       R7,#00H
0240 DA000000 E    CALLS     SEG (?C_SLDIV),?C_SLDIV
0244 F064          MOV       R6,R4
0246 F075          MOV       R7,R5
0248 DC5D          EXTP      R13,#02H
024A D48C0A00      MOV       R8,[R12+#POF(0AH)]
024E D49C0C00      MOV       R9,[R12+#POF(0CH)]
0252 2068          SUB       R6,R8
0254 3079          SUBC      R7,R9
0256 DC7D          EXTP      R13,#04H
0258 C46C3400      MOV       [R12+#POF(034H)],R6
025C C47C3600      MOV       [R12+#POF(036H)],R7
                                           ; SOURCE LINE # 92
0260 D44C0600      MOV       R4,[R12+#POF(06H)]
0264 D45C0800      MOV       R5,[R12+#POF(08H)]
0268 E6F6C406      MOV       R6,#06C4H
026C E007          MOV       R7,#00H
026E DA000000 E    CALLS     SEG (?C_LMUL),?C_LMUL
0272 8140          NEG       R4
0274 1850          ADDC      R5,#00H
0276 8150          NEG       R5
0278 E6F6E803      MOV       R6,#03E8H
027C E007          MOV       R7,#00H
027E DA000000 E    CALLS     SEG (?C_SLDIV),?C_SLDIV
0282 F064          MOV       R6,R4
0284 F075          MOV       R7,R5
0286 DC5D          EXTP      R13,#02H
0288 D48C0A00      MOV       R8,[R12+#POF(0AH)]
028C D49C0C00      MOV       R9,[R12+#POF(0CH)]
0290 2068          SUB       R6,R8
0292 3079          SUBC      R7,R9
0294 DC7D          EXTP      R13,#04H
0296 C46C3800      MOV       [R12+#POF(038H)],R6
029A C47C3A00      MOV       [R12+#POF(03AH)],R7
                                           ; SOURCE LINE # 94
029E D44C3000      MOV       R4,[R12+#POF(030H)]
02A2 D45C3200      MOV       R5,[R12+#POF(032H)]
02A6 2840          SUB       R4,#00H
02A8 3850          SUBC      R5,#00H
02AA BD07          JMPR      cc_SLE,?C0007
                                           ; SOURCE LINE # 95
02AC DC4D          EXTP      R13,#01H
02AE D44C3E00      MOV       R4,[R12+#POF(03EH)]
02B2 0841          ADD       R4,#01H
02B4 DC4D          EXTP      R13,#01H
02B6 C44C3E00      MOV       [R12+#POF(03EH)],R4
02BA         ?C0007:
                                           ; SOURCE LINE # 96
02BA DC5D          EXTP      R13,#02H
02BC D44C3400      MOV       R4,[R12+#POF(034H)]
02C0 D45C3600      MOV       R5,[R12+#POF(036H)]
02C4 2840          SUB       R4,#00H
02C6 3850          SUBC      R5,#00H
02C8 BD07          JMPR      cc_SLE,?C0008
                                           ; SOURCE LINE # 97
02CA DC4D          EXTP      R13,#01H
02CC D44C3E00      MOV       R4,[R12+#POF(03EH)]
02D0 0842          ADD       R4,#02H
02D2 DC4D          EXTP      R13,#01H
02D4 C44C3E00      MOV       [R12+#POF(03EH)],R4
02D8         ?C0008:
                                           ; SOURCE LINE # 98
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 10  

02D8 DC5D          EXTP      R13,#02H
02DA D44C3800      MOV       R4,[R12+#POF(038H)]
02DE D45C3A00      MOV       R5,[R12+#POF(03AH)]
02E2 2840          SUB       R4,#00H
02E4 3850          SUBC      R5,#00H
02E6 BD07          JMPR      cc_SLE,?C0009
                                           ; SOURCE LINE # 99
02E8 DC4D          EXTP      R13,#01H
02EA D44C3E00      MOV       R4,[R12+#POF(03EH)]
02EE 0844          ADD       R4,#04H
02F0 DC4D          EXTP      R13,#01H
02F2 C44C3E00      MOV       [R12+#POF(03EH)],R4
02F6         ?C0009:
                                           ; SOURCE LINE # 101
02F6 DC4D          EXTP      R13,#01H
02F8 D46C3E00      MOV       R6,[R12+#POF(03EH)]
02FC 4861          CMP       R6,#01H
02FE 8D09          JMPR      cc_ULT,?C0010
0300 4866          CMP       R6,#06H
0302 ED07          JMPR      cc_UGT,?C0010
                                           ; SOURCE LINE # 102
0304 F010          MOV       R1,R0
0306 0016          ADD       R1,R6
0308 A981          MOVB      RL4,[R1]
030A C086          MOVBZ     R6,RL4
030C DC4D          EXTP      R13,#01H
030E C46C3C00      MOV       [R12+#POF(03CH)],R6
0312         ?C0010:
                                           ; SOURCE LINE # 103
0312 06F00800      ADD       R0,#08H
0316 FCFD          POP       R13
0318 DB00          RETS      
             ; FUNCTION motor_sector_cal (END    RMASK = @0x73FE)

             ; FUNCTION motor_sector_switch_cal (BEGIN  RMASK = @0x7FFF)
                                           ; SOURCE LINE # 109
031A ECFD          PUSH      R13
031C ECFE          PUSH      R14
031E F0A8          MOV       R10,R8
0320 F0B9          MOV       R11,R9
;---- Variable 'v' assigned to Register 'R10/R11' ----
;---- Variable 'T2' assigned to Register 'R13' ----
;---- Variable 'T1' assigned to Register 'R14' ----
0322 2804          SUB       R0,#04H
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 118
0324 E6F64800      MOV       R6,#048H
0328 DC59          EXTP      R9,#02H
032A C4681C00      MOV       [R8+#POF(01CH)],R6
                                           ; SOURCE LINE # 119
032E D4481C00      MOV       R4,[R8+#POF(01CH)]
0332 F054          MOV       R5,R4
0334 BCF5          ASHR      R5,#0FH
0336 DC59          EXTP      R9,#02H
0338 D4680A00      MOV       R6,[R8+#POF(0AH)]
033C D4780C00      MOV       R7,[R8+#POF(0CH)]
0340 DA000000 E    CALLS     SEG (?C_LMUL),?C_LMUL
0344 0044          ADD       R4,R4
0346 1055          ADDC      R5,R5
0348 F064          MOV       R6,R4
034A E6F4E803      MOV       R4,#03E8H
034E F6F60EFE      MOV       MDL,R6
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 11  

0352 F6F50CFE      MOV       MDH,R5
0356 6B44          DIVL      R4
0358 F2F60EFE      MOV       R6,MDL
035C DC5B          EXTP      R11,#02H
035E C46A1E00      MOV       [R10+#POF(01EH)],R6
                                           ; SOURCE LINE # 123
0362 D49A1C00      MOV       R9,[R10+#POF(01CH)]
0366 F069          MOV       R6,R9
0368 F079          MOV       R7,R9
036A BCF7          ASHR      R7,#0FH
036C DC5B          EXTP      R11,#02H
036E D44A0600      MOV       R4,[R10+#POF(06H)]
0372 D45A0800      MOV       R5,[R10+#POF(08H)]
0376 DA000000 E    CALLS     SEG (?C_LMUL),?C_LMUL
037A E6F6C406      MOV       R6,#06C4H
037E E007          MOV       R7,#00H
0380 DA000000 E    CALLS     SEG (?C_LMUL),?C_LMUL
0384 E6F6E803      MOV       R6,#03E8H
0388 E007          MOV       R7,#00H
038A DA000000 E    CALLS     SEG (?C_SLDIV),?C_SLDIV
038E F024          MOV       R2,R4
0390 F035          MOV       R3,R5
;---- Variable 'l_tmps32_a' assigned to Register 'R2/R3' ----
                                           ; SOURCE LINE # 124
0392 F069          MOV       R6,R9
0394 F079          MOV       R7,R9
0396 BCF7          ASHR      R7,#0FH
0398 DC5B          EXTP      R11,#02H
039A D44A0A00      MOV       R4,[R10+#POF(0AH)]
039E D45A0C00      MOV       R5,[R10+#POF(0CH)]
03A2 DA000000 E    CALLS     SEG (?C_LMUL),?C_LMUL
03A6 F084          MOV       R8,R4
03A8 F095          MOV       R9,R5
;---- Variable 'l_tmps32_b' assigned to Register 'R8/R9' ----
                                           ; SOURCE LINE # 125
03AA F064          MOV       R6,R4
03AC 0062          ADD       R6,R2
03AE F075          MOV       R7,R5
03B0 1073          ADDC      R7,R3
03B2 E6F4E803      MOV       R4,#03E8H
03B6 F6F60EFE      MOV       MDL,R6
03BA F6F70CFE      MOV       MDH,R7
03BE 6B44          DIVL      R4
03C0 F2F60EFE      MOV       R6,MDL
03C4 DC4B          EXTP      R11,#01H
03C6 C46A2000      MOV       [R10+#POF(020H)],R6
                                           ; SOURCE LINE # 126
03CA F068          MOV       R6,R8
03CC 2062          SUB       R6,R2
03CE F075          MOV       R7,R5
03D0 3073          SUBC      R7,R3
03D2 F6F60EFE      MOV       MDL,R6
03D6 F6F70CFE      MOV       MDH,R7
03DA 6B44          DIVL      R4
03DC F2F60EFE      MOV       R6,MDL
03E0 DC5B          EXTP      R11,#02H
03E2 C46A2200      MOV       [R10+#POF(022H)],R6
                                           ; SOURCE LINE # 129
03E6 D44A3C00      MOV       R4,[R10+#POF(03CH)]
03EA 2842          SUB       R4,#02H
03EC 2D11          JMPR      cc_Z,?C0013
03EE 2842          SUB       R4,#02H
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 12  

03F0 8D15          JMPR      cc_C,?C0014
03F2 2D1C          JMPR      cc_Z,?C0015
03F4 2842          SUB       R4,#02H
03F6 8D23          JMPR      cc_C,?C0016
03F8 2D2D          JMPR      cc_Z,?C0017
03FA 0845          ADD       R4,#05H
03FC 3D32          JMPR      cc_NZ,?C0018
                                           ; SOURCE LINE # 131
03FE         ?C0012:
                                           ; SOURCE LINE # 132
03FE DC4B          EXTP      R11,#01H
0400 D44A2200      MOV       R4,[R10+#POF(022H)]
0404 F0E4          MOV       R14,R4
0406 81E0          NEG       R14
                                           ; SOURCE LINE # 133
0408 DC4B          EXTP      R11,#01H
040A D4DA1E00      MOV       R13,[R10+#POF(01EH)]
                                           ; SOURCE LINE # 134
040E 0D29          JMPR      cc_UC,?C0018
                                           ; SOURCE LINE # 135
0410         ?C0013:
                                           ; SOURCE LINE # 136
0410 DC5B          EXTP      R11,#02H
0412 D4EA2200      MOV       R14,[R10+#POF(022H)]
                                           ; SOURCE LINE # 137
0416 D4DA2000      MOV       R13,[R10+#POF(020H)]
                                           ; SOURCE LINE # 138
041A 0D23          JMPR      cc_UC,?C0018
                                           ; SOURCE LINE # 139
041C         ?C0014:
                                           ; SOURCE LINE # 140
041C DC5B          EXTP      R11,#02H
041E D4EA1E00      MOV       R14,[R10+#POF(01EH)]
                                           ; SOURCE LINE # 141
0422 D44A2000      MOV       R4,[R10+#POF(020H)]
0426 F0D4          MOV       R13,R4
0428 81D0          NEG       R13
                                           ; SOURCE LINE # 142
042A 0D1B          JMPR      cc_UC,?C0018
                                           ; SOURCE LINE # 143
042C         ?C0015:
                                           ; SOURCE LINE # 144
042C DC4B          EXTP      R11,#01H
042E D44A1E00      MOV       R4,[R10+#POF(01EH)]
0432 F0E4          MOV       R14,R4
0434 81E0          NEG       R14
                                           ; SOURCE LINE # 145
0436 DC4B          EXTP      R11,#01H
0438 D4DA2200      MOV       R13,[R10+#POF(022H)]
                                           ; SOURCE LINE # 146
043C 0D12          JMPR      cc_UC,?C0018
                                           ; SOURCE LINE # 147
043E         ?C0016:
                                           ; SOURCE LINE # 148
043E DC4B          EXTP      R11,#01H
0440 D44A2000      MOV       R4,[R10+#POF(020H)]
0444 F0E4          MOV       R14,R4
0446 81E0          NEG       R14
                                           ; SOURCE LINE # 149
0448 DC4B          EXTP      R11,#01H
044A D44A2200      MOV       R4,[R10+#POF(022H)]
044E F0D4          MOV       R13,R4
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 13  

0450 81D0          NEG       R13
                                           ; SOURCE LINE # 150
0452 0D07          JMPR      cc_UC,?C0018
                                           ; SOURCE LINE # 151
0454         ?C0017:
                                           ; SOURCE LINE # 152
0454 DC5B          EXTP      R11,#02H
0456 D4EA2000      MOV       R14,[R10+#POF(020H)]
                                           ; SOURCE LINE # 153
045A D44A1E00      MOV       R4,[R10+#POF(01EH)]
045E F0D4          MOV       R13,R4
0460 81D0          NEG       R13
                                           ; SOURCE LINE # 154
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 160
0462         ?C0018:
                                           ; SOURCE LINE # 163
0462 F06E          MOV       R6,R14
0464 006D          ADD       R6,R13
0466 46F6E803      CMP       R6,#03E8H
046A BD32          JMPR      cc_SLE,?C0020
                                           ; SOURCE LINE # 165
046C E6F4E803      MOV       R4,#03E8H
0470 0B4E          MUL       R4,R14
0472 F2F50CFE      MOV       R5,MDH
0476 F2F40EFE      MOV       R4,MDL
047A B840          MOV       [R0],R4       ; l_tmps32
047C C4500200      MOV       [R0+#02H],R5  ; l_tmps32+2
0480 F076          MOV       R7,R6
0482 BCF7          ASHR      R7,#0FH
0484 A840          MOV       R4,[R0]       ; l_tmps32
0486 D4500200      MOV       R5,[R0+#02H]  ; l_tmps32+2
048A DA000000 E    CALLS     SEG (?C_SLDIV),?C_SLDIV
048E B840          MOV       [R0],R4       ; l_tmps32
0490 C4500200      MOV       [R0+#02H],R5  ; l_tmps32+2
                                           ; SOURCE LINE # 166
0494 DC4B          EXTP      R11,#01H
0496 C44A2600      MOV       [R10+#POF(026H)],R4
                                           ; SOURCE LINE # 167
049A E6F4E803      MOV       R4,#03E8H
049E 0B4D          MUL       R4,R13
04A0 F2F50CFE      MOV       R5,MDH
04A4 F2F40EFE      MOV       R4,MDL
04A8 B840          MOV       [R0],R4       ; l_tmps32
04AA C4500200      MOV       [R0+#02H],R5  ; l_tmps32+2
04AE F04E          MOV       R4,R14
04B0 004D          ADD       R4,R13
04B2 F064          MOV       R6,R4
04B4 F074          MOV       R7,R4
04B6 BCF7          ASHR      R7,#0FH
04B8 A840          MOV       R4,[R0]       ; l_tmps32
04BA D4500200      MOV       R5,[R0+#02H]  ; l_tmps32+2
04BE DA000000 E    CALLS     SEG (?C_SLDIV),?C_SLDIV
04C2 B840          MOV       [R0],R4       ; l_tmps32
04C4 C4500200      MOV       [R0+#02H],R5  ; l_tmps32+2
                                           ; SOURCE LINE # 168
04C8 DC4B          EXTP      R11,#01H
04CA C44A2800      MOV       [R10+#POF(028H)],R4
                                           ; SOURCE LINE # 169
04CE 0D05          JMPR      cc_UC,?C0021
04D0         ?C0020:
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 14  

                                           ; SOURCE LINE # 172
04D0 DC5B          EXTP      R11,#02H
04D2 C4EA2600      MOV       [R10+#POF(026H)],R14
                                           ; SOURCE LINE # 173
04D6 C4DA2800      MOV       [R10+#POF(028H)],R13
                                           ; SOURCE LINE # 174
04DA         ?C0021:
                                           ; SOURCE LINE # 177
04DA DC4B          EXTP      R11,#01H
04DC D44A2600      MOV       R4,[R10+#POF(026H)]
04E0 E6F6E803      MOV       R6,#03E8H
04E4 2064          SUB       R6,R4
04E6 DC4B          EXTP      R11,#01H
04E8 D44A2800      MOV       R4,[R10+#POF(028H)]
04EC 2064          SUB       R6,R4
04EE 7C26          SHR       R6,#02H
04F0 DC5B          EXTP      R11,#02H
04F2 C46A2A00      MOV       [R10+#POF(02AH)],R6
                                           ; SOURCE LINE # 178
04F6 D47A2600      MOV       R7,[R10+#POF(026H)]
04FA 7C17          SHR       R7,#01H
04FC DC4B          EXTP      R11,#01H
04FE D46A2A00      MOV       R6,[R10+#POF(02AH)]
0502 0067          ADD       R6,R7
0504 DC5B          EXTP      R11,#02H
0506 C46A2C00      MOV       [R10+#POF(02CH)],R6
                                           ; SOURCE LINE # 179
050A D47A2800      MOV       R7,[R10+#POF(028H)]
050E 7C17          SHR       R7,#01H
0510 DC4B          EXTP      R11,#01H
0512 D46A2C00      MOV       R6,[R10+#POF(02CH)]
0516 0067          ADD       R6,R7
0518 DC5B          EXTP      R11,#02H
051A C46A2E00      MOV       [R10+#POF(02EH)],R6
                                           ; SOURCE LINE # 183
051E D45A2A00      MOV       R5,[R10+#POF(02AH)]
0522 E6F4D007      MOV       R4,#07D0H
0526 1B54          MULU      R5,R4
0528 F2F50CFE      MOV       R5,MDH
052C F2F40EFE      MOV       R4,MDL
0530 E6F6E803      MOV       R6,#03E8H
0534 E007          MOV       R7,#00H
0536 DA000000 E    CALLS     SEG (?C_ULDIV),?C_ULDIV
053A F084          MOV       R8,R4
053C F095          MOV       R9,R5
053E E6F6E803      MOV       R6,#03E8H
0542 E007          MOV       R7,#00H
0544 F046          MOV       R4,R6
0546 2048          SUB       R4,R8
0548 F057          MOV       R5,R7
054A F6F40400 R    MOV       g_duty0,R4
                                           ; SOURCE LINE # 184
054E DC4B          EXTP      R11,#01H
0550 D45A2C00      MOV       R5,[R10+#POF(02CH)]
0554 E6F4D007      MOV       R4,#07D0H
0558 1B54          MULU      R5,R4
055A F2F50CFE      MOV       R5,MDH
055E F2F40EFE      MOV       R4,MDL
0562 DA000000 E    CALLS     SEG (?C_ULDIV),?C_ULDIV
0566 F084          MOV       R8,R4
0568 F095          MOV       R9,R5
056A E6F6E803      MOV       R6,#03E8H
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 15  

056E E007          MOV       R7,#00H
0570 F046          MOV       R4,R6
0572 2048          SUB       R4,R8
0574 F057          MOV       R5,R7
0576 F6F40200 R    MOV       g_duty1,R4
                                           ; SOURCE LINE # 185
057A DC4B          EXTP      R11,#01H
057C D45A2E00      MOV       R5,[R10+#POF(02EH)]
0580 E6F4D007      MOV       R4,#07D0H
0584 1B54          MULU      R5,R4
0586 F2F50CFE      MOV       R5,MDH
058A F2F40EFE      MOV       R4,MDL
058E DA000000 E    CALLS     SEG (?C_ULDIV),?C_ULDIV
0592 F084          MOV       R8,R4
0594 F095          MOV       R9,R5
0596 E6F6E803      MOV       R6,#03E8H
059A E007          MOV       R7,#00H
059C F046          MOV       R4,R6
059E 2048          SUB       R4,R8
05A0 F057          MOV       R5,R7
05A2 F6F40000 R    MOV       g_duty2,R4
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 192
05A6 DC4B          EXTP      R11,#01H
05A8 D44A3C00      MOV       R4,[R10+#POF(03CH)]
05AC 2842          SUB       R4,#02H
05AE 2D15          JMPR      cc_Z,?C0026
05B0 2842          SUB       R4,#02H
05B2 8D20          JMPR      cc_C,?C0027
05B4 2D2C          JMPR      cc_Z,?C0028
05B6 2842          SUB       R4,#02H
05B8 8D37          JMPR      cc_C,?C0029
05BA 2D43          JMPR      cc_Z,?C0030
05BC 0845          ADD       R4,#05H
05BE 3D4D          JMPR      cc_NZ,?C0023
                                           ; SOURCE LINE # 194
05C0         ?C0024:
                                           ; SOURCE LINE # 195
05C0 F2F40000 R    MOV       R4,g_duty2
05C4 F6F40A00 R    MOV       g_duty_A,R4
                                           ; SOURCE LINE # 196
05C8 F2F40200 R    MOV       R4,g_duty1
05CC F6F40800 R    MOV       g_duty_B,R4
                                           ; SOURCE LINE # 197
05D0 F2F40400 R    MOV       R4,g_duty0
05D4 F6F40600 R    MOV       g_duty_C,R4
                                           ; SOURCE LINE # 198
05D8 0D40          JMPR      cc_UC,?C0023
                                           ; SOURCE LINE # 199
05DA         ?C0026:
                                           ; SOURCE LINE # 200
05DA F2F40000 R    MOV       R4,g_duty2
05DE F6F40A00 R    MOV       g_duty_A,R4
                                           ; SOURCE LINE # 201
05E2 F2F40400 R    MOV       R4,g_duty0
05E6 F6F40800 R    MOV       g_duty_B,R4
                                           ; SOURCE LINE # 202
05EA F2F40200 R    MOV       R4,g_duty1
05EE F6F40600 R    MOV       g_duty_C,R4
                                           ; SOURCE LINE # 203
05F2 0D33          JMPR      cc_UC,?C0023
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 16  

                                           ; SOURCE LINE # 204
05F4         ?C0027:
                                           ; SOURCE LINE # 205
05F4 F2F40200 R    MOV       R4,g_duty1
05F8 F6F40A00 R    MOV       g_duty_A,R4
                                           ; SOURCE LINE # 206
05FC F2F40400 R    MOV       R4,g_duty0
0600 F6F40800 R    MOV       g_duty_B,R4
                                           ; SOURCE LINE # 207
0604 F2F40000 R    MOV       R4,g_duty2
0608 F6F40600 R    MOV       g_duty_C,R4
                                           ; SOURCE LINE # 208
060C 0D26          JMPR      cc_UC,?C0023
                                           ; SOURCE LINE # 209
060E         ?C0028:
                                           ; SOURCE LINE # 210
060E F2F40400 R    MOV       R4,g_duty0
0612 F6F40A00 R    MOV       g_duty_A,R4
                                           ; SOURCE LINE # 211
0616 F2F40200 R    MOV       R4,g_duty1
061A F6F40800 R    MOV       g_duty_B,R4
                                           ; SOURCE LINE # 212
061E F2F40000 R    MOV       R4,g_duty2
0622 F6F40600 R    MOV       g_duty_C,R4
                                           ; SOURCE LINE # 213
0626 0D19          JMPR      cc_UC,?C0023
                                           ; SOURCE LINE # 214
0628         ?C0029:
                                           ; SOURCE LINE # 215
0628 F2F40400 R    MOV       R4,g_duty0
062C F6F40A00 R    MOV       g_duty_A,R4
                                           ; SOURCE LINE # 216
0630 F2F40000 R    MOV       R4,g_duty2
0634 F6F40800 R    MOV       g_duty_B,R4
                                           ; SOURCE LINE # 217
0638 F2F40200 R    MOV       R4,g_duty1
063C F6F40600 R    MOV       g_duty_C,R4
                                           ; SOURCE LINE # 218
0640 0D0C          JMPR      cc_UC,?C0023
                                           ; SOURCE LINE # 219
0642         ?C0030:
                                           ; SOURCE LINE # 220
0642 F2F40200 R    MOV       R4,g_duty1
0646 F6F40A00 R    MOV       g_duty_A,R4
                                           ; SOURCE LINE # 221
064A F2F40000 R    MOV       R4,g_duty2
064E F6F40800 R    MOV       g_duty_B,R4
                                           ; SOURCE LINE # 222
0652 F2F40400 R    MOV       R4,g_duty0
0656 F6F40600 R    MOV       g_duty_C,R4
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 226
                                           ; SOURCE LINE # 227
065A         ?C0023:
                                           ; SOURCE LINE # 229
065A F2F90A00 R    MOV       R9,g_duty_A
065E E008          MOV       R8,#00H
0660 DA000000 E    CALLS     SEG (pwm_setduty),pwm_setduty
                                           ; SOURCE LINE # 230
0664 F2F90800 R    MOV       R9,g_duty_B
0668 E018          MOV       R8,#01H
C166 COMPILER V7.57.0, SVPWM                                                               12/25/2020 22:12:56 PAGE 17  

066A DA000000 E    CALLS     SEG (pwm_setduty),pwm_setduty
                                           ; SOURCE LINE # 231
066E F2F90600 R    MOV       R9,g_duty_C
0672 E028          MOV       R8,#02H
0674 DA000000 E    CALLS     SEG (pwm_setduty),pwm_setduty
                                           ; SOURCE LINE # 233
0678 0804          ADD       R0,#04H
067A FCFE          POP       R14
067C FCFD          POP       R13
067E DB00          RETS      
             ; FUNCTION motor_sector_switch_cal (END    RMASK = @0x7FFF)



MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =        1664     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =           7     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =          12     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
