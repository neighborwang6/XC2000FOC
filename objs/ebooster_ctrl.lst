C166 COMPILER V7.57.0, EBOOSTER_CTRL                                                       12/25/2020 22:12:57 PAGE 1   


C166 COMPILER V7.57.0, COMPILATION OF MODULE EBOOSTER_CTRL
OBJECT MODULE PLACED IN .\objs\ebooster_ctrl.obj
COMPILER INVOKED BY: C:\Keil_v5\C166\BIN\C166.EXE EBS_Ctrl_Logic\ebooster_ctrl.c MODV2 LARGE BROWSE INCDIR(.\src\hardwar
                    -e;.\src;.\EOL_Diag;.\DTC_Diag;.\Hw_Driver;.\CalTool;.\DTC_Diag\mcu2_prot;./CAN_Driver;.\xcp;.\src\include;.\EBS_Ctrl_Log
                    -ic) MODV2 DEBUG CODE PRINT(.\objs\ebooster_ctrl.lst) TABS(2) OBJECT(.\objs\ebooster_ctrl.obj) 

 stmt lvl     source

    1         /**************************************************
    2         *    File Name    : ebooster_ctrl.c
    3         *    Copyright    : QingChen
    4         *    Module Name  : eBooster
    5              *
    6         *    CPU          : XC2000
    7         *    RTOS         : No RTOS
    8         *
    9         *    Create Date  : 2019.11.26/22:10
   10         *    Author/Cororation: WGY/QingChen Techology
   11         *    Abstract Description: The main ctrl logic of the ebooster.
   12         *
   13         *--------------- Revision History --------------
   14         *    No Version Date      Revisied By  Item    Description
   15         *    1  V0.0    19.11.26  WGY                  
   16         **************************************************/
   17         
   18         /**************************************************
   19         *    Debug switch Section
   20         **************************************************/
   21         
   22         /**************************************************
   23         *    Include File Section
   24         **************************************************/
   25         #include "ebooster_ctrl.h"
   26         #include "std_defs.h"
   27         #include "Filters.h"
   28         /**************************************************
   29         *    MacroDefine Section
   30         **************************************************/
   31         
   32         /**************************************************
   33         *    StructDefine Section
   34         **************************************************/
   35         
   36         /**************************************************
   37         *    Prototype Declare Section
   38         **************************************************/
   39         
   40         /**************************************************
   41         *    Global Variable Declare Section
   42         **************************************************/
   43         
   44         //--------Sensor Val--------
   45         extern u16 g_pres_sense_val;  //The Pressure of the brake fluid in the hydraculic cylinder.
   46         extern u32 g_disp_sense_val;  //The relative diaplacement of the iBooster.
   47         
   48         float DisplacementSenseMM=0;
   49         u16 PressureAVE=0;
   50         u16 ControlModePre=1,ControlMode=0;
   51         float RodMotor=0,RodActual=0,RodActual0=0.2,PercentError=0;
   52         float DisplacementSenseMM_Pre=0,RodActual_Pre=0;
   53         u16 DataTimer20ms=0,TimerState0=0,TimerState1=0,TimerState2=0;
C166 COMPILER V7.57.0, EBOOSTER_CTRL                                                       12/25/2020 22:12:57 PAGE 2   

   54         
   55         float Eerror=0,sum_error=0,Derror=0,e_error_0=50,Eerror_pre=0;
   56         float ControlP=2;
   57         float ControlI=0.04;
   58         float ControlD=0;
   59         float test=0,test1=0,test2=0;
   60         u16 state=0,state_pre=0;
   61         u16 Drv_state=1;
   62         u16 DisplacementInit=1998;
   63         u16 PressureInit=130;  //
   64         u16 stop_state=0,state_time=0,star_state=0;
   65         u16 Timer1s=0,LimitState=0;
   66         float  BrkStarVal=0.15;
   67         u16 pressure_state=0,pressure_steady=0;
   68         u16 Timer500ms=0,TimerCycle=0;
   69         float TryRod0=0;
   70         
   71         //----------------Output Val
   72         u16 Voltage=0;
   73         u16 MotorState=0;  //The direction of the moto rotation.
   74         
   75         /**************************************************
   76         *    File Static Variable Define Section
   77         **************************************************/
   78         
   79         /**************************************************
   80         *    Function Define Section
   81         **************************************************/
   82         
   83         void DoEboosterCtrl(void)
   84         {
   85  1        //------------------------------------------------Data Cal------------------------------------------//
   86  1        if(g_pres_sense_val>PressureInit)
   87  1        {
   88  2          PressureAVE=(g_pres_sense_val-PressureInit);
   89  2        }
   90  1        else
   91  1        {
   92  2          PressureAVE=0;
   93  2        }
   94  1        DisplacementSenseMM=(g_disp_sense_val*1.0-DisplacementInit*1.0);
   95  1        
   96  1          //pressure_ctrl///////////////////////////////////////////////////////////////////////////////////////
             -///////////////
   97  1      
   98  1          if(ControlModePre==1)
   99  1          {
  100  2            if(PressureAVE>=0)
  101  2              {
  102  3                RodMotor=(PressureAVE*1.0)/20.0;//4.25;//num_better pressure sensor30.762
  103  3                if(RodMotor>=15)
  104  3                {
  105  4                  RodMotor=15;
  106  4                }
  107  3              }
  108  2              else
  109  2              {
  110  3                  RodMotor=0;
  111  3              }
  112  2              RodActual=RodMotor+DisplacementSenseMM*0.00122;
  113  2              if(RodActual<0)
  114  2              {
C166 COMPILER V7.57.0, EBOOSTER_CTRL                                                       12/25/2020 22:12:57 PAGE 3   

  115  3                  RodActual=0;
  116  3              }
  117  2      
  118  2              //------------------------------------------------control mode------------------------------------
             -------//
  119  2              if(((RodActual)>=(RodActual0)))//&&(DisplacementSenseMM>=0.1)
  120  2              {
  121  3                  ControlMode=1;  //
  122  3              }
  123  2              else
  124  2              {
  125  3                  ControlMode=0;  //
  126  3              }
  127  2             
  128  2              //------------------------------------------------control mode end--------------------------------
             -----------//
  129  2              if((ControlMode==1))
  130  2              {
  131  3                Eerror=DisplacementSenseMM; //Eerror: MAX_VAL == 14
  132  3                
  133  3                sum_error+=(Eerror);  //PID - I
  134  3      
  135  3                Derror=Eerror-Eerror_pre; //PID - D
  136  3                
  137  3                if((sum_error>=(700.0/ControlI)))
  138  3                {
  139  4                  sum_error=700.0/ControlI;
  140  4                }
  141  3                if(sum_error<=-(300.0/ControlI))
  142  3                {
  143  4                  sum_error=-300.0/ControlI;
  144  4                
  145  4                }
  146  3                Eerror_pre=Eerror;
  147  3                
  148  3                //--------PID CTRL--------
  149  3                if((Eerror>4.2)||(Eerror<-4.2))//PID stage 1
  150  3                {
  151  4                  //ControlP = 25.0;
  152  4                  //ControlI = 0.0;
  153  4                  
  154  4                  if((ControlP*Eerror+ControlI*sum_error+ControlD*Derror)>=0)
  155  4                  {
  156  5                    Voltage=(ControlP*Eerror+ControlI*sum_error+ControlD*Derror);
  157  5                    MotorState=0;
  158  5                  }
  159  4                  else
  160  4                  {
  161  5                    Voltage=-(ControlP*Eerror+ControlI*sum_error+ControlD*Derror);
  162  5                    MotorState=1;
  163  5                    if(Voltage>=300)
  164  5              {
  165  6                Voltage =300; //Limit to 3V.1200 => 12V 
  166  6              }
  167  5                  }
  168  4                }
  169  3                else if((Eerror>4.2)||(Eerror<-4.2))//PID stage 2
  170  3                {
  171  4                  //ControlP = 5.0;
  172  4                  //ControlI = 0.002;
  173  4                  if((ControlP*Eerror+ControlI*sum_error+ControlD*Derror)>=0)
  174  4                    {
C166 COMPILER V7.57.0, EBOOSTER_CTRL                                                       12/25/2020 22:12:57 PAGE 4   

  175  5                      Voltage=(ControlP*Eerror+ControlI*sum_error+ControlD*Derror);
  176  5                      MotorState=0;
  177  5                    }
  178  4                    else
  179  4                    {
  180  5                      Voltage=-(ControlP*Eerror+ControlI*sum_error+ControlD*Derror);
  181  5                      MotorState=1;
  182  5                      if(Voltage>=300)
  183  5              {
  184  6                Voltage =300; //Limit to 3V.1200 => 12V 
  185  6              }
  186  5                    }
  187  4                }
  188  3              }
  189  2              if((PressureAVE>300)&&(LimitState==0)&&(DisplacementSenseMM>=50))  //7.5Mpa
  190  2              {
  191  3                
  192  3                  Voltage=70;//22.22
  193  3                  LimitState=1;
  194  3              }
  195  2              if(DisplacementSenseMM<=-150)
  196  2                {
  197  3                  LimitState=0;
  198  3                }
  199  2              if(Voltage>=700)
  200  2              {
  201  3                Voltage =700; //Limit to 3V.1200 => 12V 
  202  3              }
  203  2              /* Drive the motor to initial position*/
  204  2              if(ControlMode==0)
  205  2              {
  206  3                /*Detect motor position*/
  207  3                Voltage=0;
  208  3                sum_error=0;
  209  3                RodActual=0;
  210  3                RodMotor=0;
  211  3                test=0;
  212  3                Eerror=0;
  213  3                Drv_state=1;
  214  3                state=5;
  215  3              }
  216  2          }
  217  1          else
  218  1          {
  219  2            Voltage=0;
  220  2            sum_error=0;
  221  2            RodActual=0;
  222  2            RodMotor=0;
  223  2            test=0;
  224  2            Eerror=0;
  225  2            Drv_state=1;
  226  2            state=5;
  227  2          }
  228  1          //////////////////////////////////////////////////////////////////////
  229  1      
  230  1      
  231  1      
  232  1      }
C166 COMPILER V7.57.0, EBOOSTER_CTRL                                                       12/25/2020 22:12:57 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION DoEboosterCtrl (BEGIN  RMASK = @0x7FFE)
                                           ; SOURCE LINE # 83
0000 ECFD          PUSH      R13
                                           ; SOURCE LINE # 86
0002 F2F50600 R    MOV       R5,PressureInit
0006 42F50000 E    CMP       R5,g_pres_sense_val
000A 9D06          JMPR      cc_UGE,?C0001
                                           ; SOURCE LINE # 88
000C F2F40000 E    MOV       R4,g_pres_sense_val
0010 2045          SUB       R4,R5
0012 F6F43600 R    MOV       PressureAVE,R4
                                           ; SOURCE LINE # 89
0016 0D02          JMPR      cc_UC,?C0002
0018         ?C0001:
                                           ; SOURCE LINE # 92
0018 F68E3600 R    MOV       PressureAVE,ZEROS
                                           ; SOURCE LINE # 93
001C         ?C0002:
                                           ; SOURCE LINE # 94
001C F2F40000 E    MOV       R4,g_disp_sense_val
0020 F2F50200 E    MOV       R5,g_disp_sense_val+02H
0024 E006          MOV       R6,#00H
0026 DA000000 E    CALLS     SEG (?C_FCAST),?C_FCAST
002A F0C4          MOV       R12,R4
002C F0D5          MOV       R13,R5
002E F2F40200 R    MOV       R4,DisplacementInit
0032 E005          MOV       R5,#00H
0034 E006          MOV       R6,#00H
0036 DA000000 E    CALLS     SEG (?C_FCAST),?C_FCAST
003A F064          MOV       R6,R4
003C F075          MOV       R7,R5
003E F04C          MOV       R4,R12
0040 F05D          MOV       R5,R13
0042 DA000000 E    CALLS     SEG (?C_FPSUB),?C_FPSUB
0046 F6F47A00 R    MOV       DisplacementSenseMM,R4
004A F6F57C00 R    MOV       DisplacementSenseMM+02H,R5
                                           ; SOURCE LINE # 98
004E F2F46400 R    MOV       R4,ControlModePre
0052 4841          CMP       R4,#01H
0054 EA30BC04 R    JMPA      cc_NZ,?C0003
                                           ; SOURCE LINE # 100
0058 F2F73600 R    MOV       R7,PressureAVE
                                           ; SOURCE LINE # 102
005C F047          MOV       R4,R7
005E E005          MOV       R5,#00H
0060 E006          MOV       R6,#00H
0062 DA000000 E    CALLS     SEG (?C_FCAST),?C_FCAST
0066 E006          MOV       R6,#00H
0068 E6F7A041      MOV       R7,#041A0H
006C DA000000 E    CALLS     SEG (?C_FPDIV),?C_FPDIV
0070 F0C4          MOV       R12,R4
0072 F0D5          MOV       R13,R5
0074 F6F43800 R    MOV       RodMotor,R4
0078 F6F53A00 R    MOV       RodMotor+02H,R5
                                           ; SOURCE LINE # 103
007C E006          MOV       R6,#00H
007E E6F77041      MOV       R7,#04170H
0082 DA000000 E    CALLS     SEG (?C_FPCMP),?C_FPCMP
0086 CD0B          JMPR      cc_SLT,?C0006
C166 COMPILER V7.57.0, EBOOSTER_CTRL                                                       12/25/2020 22:12:57 PAGE 6   

                                           ; SOURCE LINE # 105
0088 E6F57041      MOV       R5,#04170H
008C F68E3800 R    MOV       RodMotor,ZEROS
0090 F6F53A00 R    MOV       RodMotor+02H,R5
                                           ; SOURCE LINE # 106
0094 0D04          JMPR      cc_UC,?C0006
0096         ?C0004:
                                           ; SOURCE LINE # 110
0096 F68E3800 R    MOV       RodMotor,ZEROS
009A F68E3A00 R    MOV       RodMotor+02H,ZEROS
                                           ; SOURCE LINE # 111
009E         ?C0006:
                                           ; SOURCE LINE # 112
009E E6F668E8      MOV       R6,#0E868H
00A2 E6F79F3A      MOV       R7,#03A9FH
00A6 F2F47A00 R    MOV       R4,DisplacementSenseMM
00AA F2F57C00 R    MOV       R5,DisplacementSenseMM+02H
00AE DA000000 E    CALLS     SEG (?C_FPMUL),?C_FPMUL
00B2 F064          MOV       R6,R4
00B4 F075          MOV       R7,R5
00B6 F2F43800 R    MOV       R4,RodMotor
00BA F2F53A00 R    MOV       R5,RodMotor+02H
00BE DA000000 E    CALLS     SEG (?C_FPADD),?C_FPADD
00C2 F0C4          MOV       R12,R4
00C4 F0D5          MOV       R13,R5
00C6 F6F47000 R    MOV       RodActual,R4
00CA F6F57200 R    MOV       RodActual+02H,R5
                                           ; SOURCE LINE # 113
00CE E006          MOV       R6,#00H
00D0 E007          MOV       R7,#00H
00D2 DA000000 E    CALLS     SEG (?C_FPCMP),?C_FPCMP
00D6 DD04          JMPR      cc_SGE,?C0007
                                           ; SOURCE LINE # 115
00D8 F68E7000 R    MOV       RodActual,ZEROS
00DC F68E7200 R    MOV       RodActual+02H,ZEROS
                                           ; SOURCE LINE # 116
00E0         ?C0007:
                                           ; SOURCE LINE # 119
00E0 F2F64800 R    MOV       R6,RodActual0
00E4 F2F74A00 R    MOV       R7,RodActual0+02H
00E8 F2F47000 R    MOV       R4,RodActual
00EC F2F57200 R    MOV       R5,RodActual+02H
00F0 DA000000 E    CALLS     SEG (?C_FPCMP),?C_FPCMP
00F4 CD04          JMPR      cc_SLT,?C0008
                                           ; SOURCE LINE # 121
00F6 E014          MOV       R4,#01H
00F8 F6F41800 R    MOV       ControlMode,R4
                                           ; SOURCE LINE # 122
00FC 0D02          JMPR      cc_UC,?C0009
00FE         ?C0008:
                                           ; SOURCE LINE # 125
00FE F68E1800 R    MOV       ControlMode,ZEROS
                                           ; SOURCE LINE # 126
0102         ?C0009:
                                           ; SOURCE LINE # 129
0102 F2F41800 R    MOV       R4,ControlMode
0106 4841          CMP       R4,#01H
0108 EA302004 R    JMPA      cc_NZ,?C0010
                                           ; SOURCE LINE # 131
010C F2F47A00 R    MOV       R4,DisplacementSenseMM
0110 F2F57C00 R    MOV       R5,DisplacementSenseMM+02H
0114 F6F41000 R    MOV       Eerror,R4
C166 COMPILER V7.57.0, EBOOSTER_CTRL                                                       12/25/2020 22:12:57 PAGE 7   

0118 F6F51200 R    MOV       Eerror+02H,R5
                                           ; SOURCE LINE # 133
011C F2FC1000 R    MOV       R12,Eerror
0120 F2FD1200 R    MOV       R13,Eerror+02H
0124 F2F41C00 R    MOV       R4,sum_error
0128 F2F51E00 R    MOV       R5,sum_error+02H
012C F06C          MOV       R6,R12
012E F07D          MOV       R7,R13
0130 DA000000 E    CALLS     SEG (?C_FPADD),?C_FPADD
0134 F6F41C00 R    MOV       sum_error,R4
0138 F6F51E00 R    MOV       sum_error+02H,R5
                                           ; SOURCE LINE # 135
013C F2F65A00 R    MOV       R6,Eerror_pre
0140 F2F75C00 R    MOV       R7,Eerror_pre+02H
0144 F04C          MOV       R4,R12
0146 F05D          MOV       R5,R13
0148 DA000000 E    CALLS     SEG (?C_FPSUB),?C_FPSUB
014C F6F41400 R    MOV       Derror,R4
0150 F6F51600 R    MOV       Derror+02H,R5
                                           ; SOURCE LINE # 137
0154 F2FC4E00 R    MOV       R12,ControlI
0158 F2FD5000 R    MOV       R13,ControlI+02H
015C E004          MOV       R4,#00H
015E E6F52F44      MOV       R5,#0442FH
0162 F06C          MOV       R6,R12
0164 F07D          MOV       R7,R13
0166 DA000000 E    CALLS     SEG (?C_FPDIV),?C_FPDIV
016A F064          MOV       R6,R4
016C F075          MOV       R7,R5
016E F2F41C00 R    MOV       R4,sum_error
0172 F2F51E00 R    MOV       R5,sum_error+02H
0176 DA000000 E    CALLS     SEG (?C_FPCMP),?C_FPCMP
017A CD0B          JMPR      cc_SLT,?C0011
                                           ; SOURCE LINE # 139
017C E004          MOV       R4,#00H
017E E6F52F44      MOV       R5,#0442FH
0182 F06C          MOV       R6,R12
0184 F07D          MOV       R7,R13
0186 DA000000 E    CALLS     SEG (?C_FPDIV),?C_FPDIV
018A F6F41C00 R    MOV       sum_error,R4
018E F6F51E00 R    MOV       sum_error+02H,R5
                                           ; SOURCE LINE # 140
0192         ?C0011:
                                           ; SOURCE LINE # 141
0192 F2F64E00 R    MOV       R6,ControlI
0196 F2F75000 R    MOV       R7,ControlI+02H
019A E004          MOV       R4,#00H
019C E6F59643      MOV       R5,#04396H
01A0 DA000000 E    CALLS     SEG (?C_FPDIV),?C_FPDIV
01A4 DA000000 E    CALLS     SEG (?C_FPNEG),?C_FPNEG
01A8 F064          MOV       R6,R4
01AA F075          MOV       R7,R5
01AC F2F41C00 R    MOV       R4,sum_error
01B0 F2F51E00 R    MOV       R5,sum_error+02H
01B4 DA000000 E    CALLS     SEG (?C_FPCMP),?C_FPCMP
01B8 AD0D          JMPR      cc_SGT,?C0012
                                           ; SOURCE LINE # 143
01BA F2F64E00 R    MOV       R6,ControlI
01BE F2F75000 R    MOV       R7,ControlI+02H
01C2 E004          MOV       R4,#00H
01C4 E6F596C3      MOV       R5,#0C396H
01C8 DA000000 E    CALLS     SEG (?C_FPDIV),?C_FPDIV
C166 COMPILER V7.57.0, EBOOSTER_CTRL                                                       12/25/2020 22:12:57 PAGE 8   

01CC F6F41C00 R    MOV       sum_error,R4
01D0 F6F51E00 R    MOV       sum_error+02H,R5
                                           ; SOURCE LINE # 145
01D4         ?C0012:
                                           ; SOURCE LINE # 146
01D4 F2F41000 R    MOV       R4,Eerror
01D8 F2F51200 R    MOV       R5,Eerror+02H
01DC F6F45A00 R    MOV       Eerror_pre,R4
01E0 F6F55C00 R    MOV       Eerror_pre+02H,R5
                                           ; SOURCE LINE # 149
01E4 E6F66666      MOV       R6,#06666H
01E8 E6F78640      MOV       R7,#04086H
01EC DA000000 E    CALLS     SEG (?C_FPCMP),?C_FPCMP
01F0 AD0B          JMPR      cc_SGT,?C0014
01F2 E6F66666      MOV       R6,#06666H
01F6 E6F786C0      MOV       R7,#0C086H
01FA F2F41000 R    MOV       R4,Eerror
01FE F2F51200 R    MOV       R5,Eerror+02H
0202 DA000000 E    CALLS     SEG (?C_FPCMP),?C_FPCMP
0206 DD7D          JMPR      cc_SGE,?C0013
0208         ?C0014:
                                           ; SOURCE LINE # 154
0208 F2F61C00 R    MOV       R6,sum_error
020C F2F71E00 R    MOV       R7,sum_error+02H
0210 F2F44E00 R    MOV       R4,ControlI
0214 F2F55000 R    MOV       R5,ControlI+02H
0218 DA000000 E    CALLS     SEG (?C_FPMUL),?C_FPMUL
021C F0C4          MOV       R12,R4
021E F0D5          MOV       R13,R5
0220 F2F61000 R    MOV       R6,Eerror
0224 F2F71200 R    MOV       R7,Eerror+02H
0228 F2F44200 R    MOV       R4,ControlP
022C F2F54400 R    MOV       R5,ControlP+02H
0230 DA000000 E    CALLS     SEG (?C_FPMUL),?C_FPMUL
0234 F06C          MOV       R6,R12
0236 F07D          MOV       R7,R13
0238 DA000000 E    CALLS     SEG (?C_FPADD),?C_FPADD
023C F0C4          MOV       R12,R4
023E F0D5          MOV       R13,R5
0240 F2F61400 R    MOV       R6,Derror
0244 F2F71600 R    MOV       R7,Derror+02H
0248 F2F45200 R    MOV       R4,ControlD
024C F2F55400 R    MOV       R5,ControlD+02H
0250 DA000000 E    CALLS     SEG (?C_FPMUL),?C_FPMUL
0254 F064          MOV       R6,R4
0256 F075          MOV       R7,R5
0258 F04C          MOV       R4,R12
025A F05D          MOV       R5,R13
025C DA000000 E    CALLS     SEG (?C_FPADD),?C_FPADD
0260 F0C4          MOV       R12,R4
0262 F0D5          MOV       R13,R5
0264 E006          MOV       R6,#00H
0266 E007          MOV       R7,#00H
0268 DA000000 E    CALLS     SEG (?C_FPCMP),?C_FPCMP
026C CD0A          JMPR      cc_SLT,?C0015
                                           ; SOURCE LINE # 156
026E F04C          MOV       R4,R12
0270 F05D          MOV       R5,R13
0272 DA000000 E    CALLS     SEG (?C_CASTF),?C_CASTF
0276 F6F42800 R    MOV       Voltage,R4
                                           ; SOURCE LINE # 157
027A F68E5E00 R    MOV       MotorState,ZEROS
C166 COMPILER V7.57.0, EBOOSTER_CTRL                                                       12/25/2020 22:12:57 PAGE 9   

                                           ; SOURCE LINE # 158
027E EA002004 R    JMPA      cc_UC,?C0010
0282         ?C0015:
                                           ; SOURCE LINE # 161
0282 F2F61C00 R    MOV       R6,sum_error
0286 F2F71E00 R    MOV       R7,sum_error+02H
028A F2F44E00 R    MOV       R4,ControlI
028E F2F55000 R    MOV       R5,ControlI+02H
0292 DA000000 E    CALLS     SEG (?C_FPMUL),?C_FPMUL
0296 F0C4          MOV       R12,R4
0298 F0D5          MOV       R13,R5
029A F2F61000 R    MOV       R6,Eerror
029E F2F71200 R    MOV       R7,Eerror+02H
02A2 F2F44200 R    MOV       R4,ControlP
02A6 F2F54400 R    MOV       R5,ControlP+02H
02AA DA000000 E    CALLS     SEG (?C_FPMUL),?C_FPMUL
02AE F06C          MOV       R6,R12
02B0 F07D          MOV       R7,R13
02B2 DA000000 E    CALLS     SEG (?C_FPADD),?C_FPADD
02B6 F0C4          MOV       R12,R4
02B8 F0D5          MOV       R13,R5
02BA F2F61400 R    MOV       R6,Derror
02BE F2F71600 R    MOV       R7,Derror+02H
02C2 F2F45200 R    MOV       R4,ControlD
02C6 F2F55400 R    MOV       R5,ControlD+02H
02CA DA000000 E    CALLS     SEG (?C_FPMUL),?C_FPMUL
02CE F064          MOV       R6,R4
02D0 F075          MOV       R7,R5
02D2 F04C          MOV       R4,R12
02D4 F05D          MOV       R5,R13
02D6 DA000000 E    CALLS     SEG (?C_FPADD),?C_FPADD
02DA DA000000 E    CALLS     SEG (?C_FPNEG),?C_FPNEG
02DE DA000000 E    CALLS     SEG (?C_CASTF),?C_CASTF
02E2 F054          MOV       R5,R4
02E4 F6F42800 R    MOV       Voltage,R4
                                           ; SOURCE LINE # 162
02E8 E014          MOV       R4,#01H
02EA F6F45E00 R    MOV       MotorState,R4
                                           ; SOURCE LINE # 163
02EE 46F52C01      CMP       R5,#012CH
02F2 EA802004 R    JMPA      cc_ULT,?C0010
                                           ; SOURCE LINE # 165
02F6 E6F42C01      MOV       R4,#012CH
02FA F6F42800 R    MOV       Voltage,R4
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 168
02FE EA002004 R    JMPA      cc_UC,?C0010
0302         ?C0013:
                                           ; SOURCE LINE # 169
0302 E6F66666      MOV       R6,#06666H
0306 E6F78640      MOV       R7,#04086H
030A F2F41000 R    MOV       R4,Eerror
030E F2F51200 R    MOV       R5,Eerror+02H
0312 DA000000 E    CALLS     SEG (?C_FPCMP),?C_FPCMP
0316 AD0B          JMPR      cc_SGT,?C0020
0318 E6F66666      MOV       R6,#06666H
031C E6F786C0      MOV       R7,#0C086H
0320 F2F41000 R    MOV       R4,Eerror
0324 F2F51200 R    MOV       R5,Eerror+02H
0328 DA000000 E    CALLS     SEG (?C_FPCMP),?C_FPCMP
032C DD79          JMPR      cc_SGE,?C0010
032E         ?C0020:
C166 COMPILER V7.57.0, EBOOSTER_CTRL                                                       12/25/2020 22:12:57 PAGE 10  

                                           ; SOURCE LINE # 173
032E F2F61C00 R    MOV       R6,sum_error
0332 F2F71E00 R    MOV       R7,sum_error+02H
0336 F2F44E00 R    MOV       R4,ControlI
033A F2F55000 R    MOV       R5,ControlI+02H
033E DA000000 E    CALLS     SEG (?C_FPMUL),?C_FPMUL
0342 F0C4          MOV       R12,R4
0344 F0D5          MOV       R13,R5
0346 F2F61000 R    MOV       R6,Eerror
034A F2F71200 R    MOV       R7,Eerror+02H
034E F2F44200 R    MOV       R4,ControlP
0352 F2F54400 R    MOV       R5,ControlP+02H
0356 DA000000 E    CALLS     SEG (?C_FPMUL),?C_FPMUL
035A F06C          MOV       R6,R12
035C F07D          MOV       R7,R13
035E DA000000 E    CALLS     SEG (?C_FPADD),?C_FPADD
0362 F0C4          MOV       R12,R4
0364 F0D5          MOV       R13,R5
0366 F2F61400 R    MOV       R6,Derror
036A F2F71600 R    MOV       R7,Derror+02H
036E F2F45200 R    MOV       R4,ControlD
0372 F2F55400 R    MOV       R5,ControlD+02H
0376 DA000000 E    CALLS     SEG (?C_FPMUL),?C_FPMUL
037A F064          MOV       R6,R4
037C F075          MOV       R7,R5
037E F04C          MOV       R4,R12
0380 F05D          MOV       R5,R13
0382 DA000000 E    CALLS     SEG (?C_FPADD),?C_FPADD
0386 F0C4          MOV       R12,R4
0388 F0D5          MOV       R13,R5
038A E006          MOV       R6,#00H
038C E007          MOV       R7,#00H
038E DA000000 E    CALLS     SEG (?C_FPCMP),?C_FPCMP
0392 CD09          JMPR      cc_SLT,?C0021
                                           ; SOURCE LINE # 175
0394 F04C          MOV       R4,R12
0396 F05D          MOV       R5,R13
0398 DA000000 E    CALLS     SEG (?C_CASTF),?C_CASTF
039C F6F42800 R    MOV       Voltage,R4
                                           ; SOURCE LINE # 176
03A0 F68E5E00 R    MOV       MotorState,ZEROS
                                           ; SOURCE LINE # 177
03A4 0D3D          JMPR      cc_UC,?C0010
03A6         ?C0021:
                                           ; SOURCE LINE # 180
03A6 F2F61C00 R    MOV       R6,sum_error
03AA F2F71E00 R    MOV       R7,sum_error+02H
03AE F2F44E00 R    MOV       R4,ControlI
03B2 F2F55000 R    MOV       R5,ControlI+02H
03B6 DA000000 E    CALLS     SEG (?C_FPMUL),?C_FPMUL
03BA F0C4          MOV       R12,R4
03BC F0D5          MOV       R13,R5
03BE F2F61000 R    MOV       R6,Eerror
03C2 F2F71200 R    MOV       R7,Eerror+02H
03C6 F2F44200 R    MOV       R4,ControlP
03CA F2F54400 R    MOV       R5,ControlP+02H
03CE DA000000 E    CALLS     SEG (?C_FPMUL),?C_FPMUL
03D2 F06C          MOV       R6,R12
03D4 F07D          MOV       R7,R13
03D6 DA000000 E    CALLS     SEG (?C_FPADD),?C_FPADD
03DA F0C4          MOV       R12,R4
03DC F0D5          MOV       R13,R5
C166 COMPILER V7.57.0, EBOOSTER_CTRL                                                       12/25/2020 22:12:57 PAGE 11  

03DE F2F61400 R    MOV       R6,Derror
03E2 F2F71600 R    MOV       R7,Derror+02H
03E6 F2F45200 R    MOV       R4,ControlD
03EA F2F55400 R    MOV       R5,ControlD+02H
03EE DA000000 E    CALLS     SEG (?C_FPMUL),?C_FPMUL
03F2 F064          MOV       R6,R4
03F4 F075          MOV       R7,R5
03F6 F04C          MOV       R4,R12
03F8 F05D          MOV       R5,R13
03FA DA000000 E    CALLS     SEG (?C_FPADD),?C_FPADD
03FE DA000000 E    CALLS     SEG (?C_FPNEG),?C_FPNEG
0402 DA000000 E    CALLS     SEG (?C_CASTF),?C_CASTF
0406 F054          MOV       R5,R4
0408 F6F42800 R    MOV       Voltage,R4
                                           ; SOURCE LINE # 181
040C E014          MOV       R4,#01H
040E F6F45E00 R    MOV       MotorState,R4
                                           ; SOURCE LINE # 182
0412 46F52C01      CMP       R5,#012CH
0416 8D04          JMPR      cc_ULT,?C0010
                                           ; SOURCE LINE # 184
0418 E6F42C01      MOV       R4,#012CH
041C F6F42800 R    MOV       Voltage,R4
                                           ; SOURCE LINE # 185
                                           ; SOURCE LINE # 187
0420         ?C0010:
                                           ; SOURCE LINE # 189
0420 F2F43600 R    MOV       R4,PressureAVE
0424 46F42C01      CMP       R4,#012CH
0428 FD14          JMPR      cc_ULE,?C0024
042A F2F46E00 R    MOV       R4,LimitState
042E 3D11          JMPR      cc_NZ,?C0024
0430 E006          MOV       R6,#00H
0432 E6F74842      MOV       R7,#04248H
0436 F2F47A00 R    MOV       R4,DisplacementSenseMM
043A F2F57C00 R    MOV       R5,DisplacementSenseMM+02H
043E DA000000 E    CALLS     SEG (?C_FPCMP),?C_FPCMP
0442 CD07          JMPR      cc_SLT,?C0024
                                           ; SOURCE LINE # 192
0444 E6F44600      MOV       R4,#046H
0448 F6F42800 R    MOV       Voltage,R4
                                           ; SOURCE LINE # 193
044C E014          MOV       R4,#01H
044E F6F46E00 R    MOV       LimitState,R4
                                           ; SOURCE LINE # 194
0452         ?C0024:
                                           ; SOURCE LINE # 195
0452 E006          MOV       R6,#00H
0454 E6F716C3      MOV       R7,#0C316H
0458 F2F47A00 R    MOV       R4,DisplacementSenseMM
045C F2F57C00 R    MOV       R5,DisplacementSenseMM+02H
0460 DA000000 E    CALLS     SEG (?C_FPCMP),?C_FPCMP
0464 AD02          JMPR      cc_SGT,?C0025
                                           ; SOURCE LINE # 197
0466 F68E6E00 R    MOV       LimitState,ZEROS
                                           ; SOURCE LINE # 198
046A         ?C0025:
                                           ; SOURCE LINE # 199
046A F2F42800 R    MOV       R4,Voltage
046E 46F4BC02      CMP       R4,#02BCH
0472 8D04          JMPR      cc_ULT,?C0026
                                           ; SOURCE LINE # 201
C166 COMPILER V7.57.0, EBOOSTER_CTRL                                                       12/25/2020 22:12:57 PAGE 12  

0474 E6F4BC02      MOV       R4,#02BCH
0478 F6F42800 R    MOV       Voltage,R4
                                           ; SOURCE LINE # 202
047C         ?C0026:
                                           ; SOURCE LINE # 204
047C F2F41800 R    MOV       R4,ControlMode
0480 3D39          JMPR      cc_NZ,?C0028
                                           ; SOURCE LINE # 207
0482 F68E2800 R    MOV       Voltage,ZEROS
                                           ; SOURCE LINE # 208
0486 F68E1C00 R    MOV       sum_error,ZEROS
048A F68E1E00 R    MOV       sum_error+02H,ZEROS
                                           ; SOURCE LINE # 209
048E F68E7000 R    MOV       RodActual,ZEROS
0492 F68E7200 R    MOV       RodActual+02H,ZEROS
                                           ; SOURCE LINE # 210
0496 F68E3800 R    MOV       RodMotor,ZEROS
049A F68E3A00 R    MOV       RodMotor+02H,ZEROS
                                           ; SOURCE LINE # 211
049E F68E3000 R    MOV       test,ZEROS
04A2 F68E3200 R    MOV       test+02H,ZEROS
                                           ; SOURCE LINE # 212
04A6 F68E1000 R    MOV       Eerror,ZEROS
04AA F68E1200 R    MOV       Eerror+02H,ZEROS
                                           ; SOURCE LINE # 213
04AE E014          MOV       R4,#01H
04B0 F6F44C00 R    MOV       Drv_state,R4
                                           ; SOURCE LINE # 214
04B4 E054          MOV       R4,#05H
04B6 F6F45800 R    MOV       state,R4
                                           ; SOURCE LINE # 215
04BA 0D1C          JMPR      cc_UC,?C0028
04BC         ?C0003:
                                           ; SOURCE LINE # 219
04BC F68E2800 R    MOV       Voltage,ZEROS
                                           ; SOURCE LINE # 220
04C0 F68E1C00 R    MOV       sum_error,ZEROS
04C4 F68E1E00 R    MOV       sum_error+02H,ZEROS
                                           ; SOURCE LINE # 221
04C8 F68E7000 R    MOV       RodActual,ZEROS
04CC F68E7200 R    MOV       RodActual+02H,ZEROS
                                           ; SOURCE LINE # 222
04D0 F68E3800 R    MOV       RodMotor,ZEROS
04D4 F68E3A00 R    MOV       RodMotor+02H,ZEROS
                                           ; SOURCE LINE # 223
04D8 F68E3000 R    MOV       test,ZEROS
04DC F68E3200 R    MOV       test+02H,ZEROS
                                           ; SOURCE LINE # 224
04E0 F68E1000 R    MOV       Eerror,ZEROS
04E4 F68E1200 R    MOV       Eerror+02H,ZEROS
                                           ; SOURCE LINE # 225
04E8 E014          MOV       R4,#01H
04EA F6F44C00 R    MOV       Drv_state,R4
                                           ; SOURCE LINE # 226
04EE E054          MOV       R4,#05H
04F0 F6F45800 R    MOV       state,R4
                                           ; SOURCE LINE # 227
04F4         ?C0028:
                                           ; SOURCE LINE # 232
04F4 FCFD          POP       R13
04F6 DB00          RETS      
             ; FUNCTION DoEboosterCtrl (END    RMASK = @0x7FFE)
C166 COMPILER V7.57.0, EBOOSTER_CTRL                                                       12/25/2020 22:12:57 PAGE 13  




MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =        1272     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =         126     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =         298     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
