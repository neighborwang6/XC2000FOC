C166 COMPILER V7.57.0, XCP_CAN                                                             12/25/2020 22:12:54 PAGE 1   


C166 COMPILER V7.57.0, COMPILATION OF MODULE XCP_CAN
OBJECT MODULE PLACED IN .\objs\xcp_can.obj
COMPILER INVOKED BY: C:\Keil_v5\C166\BIN\C166.EXE xcp\xcp_can.c MODV2 LARGE BROWSE INCDIR(.\src\hardware;.\src;.\EOL_Dia
                    -g;.\DTC_Diag;.\Hw_Driver;.\CalTool;.\DTC_Diag\mcu2_prot;./CAN_Driver;.\xcp;.\src\include;.\EBS_Ctrl_Logic) MODV2 DEBUG C
                    -ODE PRINT(.\objs\xcp_can.lst) TABS(2) OBJECT(.\objs\xcp_can.obj) 

 stmt lvl     source

    1         #include "xcp_can.h"
    2         #include "hican.h"
    3         #include "xcpbasic.h"
    4         
    5         void XcpCanInit(void)
    6         {
    7  1      }
    8         
    9         void XcpCanBackground(void)
   10         {
   11  1      }
   12         
   13         void XcpCanSend(u8 len, u8 *msg)
   14         {
   15  1        if(len>8)
   16  1          return;
   17  1        
   18  1          can_sload(2,msg);
   19  1          can_stx(2); 
   20  1        
   21  1        XcpSendCallBack();
   22  1      }
   23         
   24         void ApplXcpInterruptDisable(void)
   25         {
   26  1      }
   27         
   28         void ApplXcpInterruptEnable(void)
   29         {
   30  1      }
C166 COMPILER V7.57.0, XCP_CAN                                                             12/25/2020 22:12:54 PAGE 2   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION XcpCanInit (BEGIN  RMASK = @0x8000)
                                           ; SOURCE LINE # 5
                                           ; SOURCE LINE # 7
0000 DB00          RETS      
             ; FUNCTION XcpCanInit (END    RMASK = @0x8000)

             ; FUNCTION XcpCanBackground (BEGIN  RMASK = @0x8000)
                                           ; SOURCE LINE # 9
                                           ; SOURCE LINE # 11
0002 DB00          RETS      
             ; FUNCTION XcpCanBackground (END    RMASK = @0x8000)

             ; FUNCTION XcpCanSend (BEGIN  RMASK = @0x7FFF)
                                           ; SOURCE LINE # 13
0004 F069          MOV       R6,R9
0006 F07A          MOV       R7,R10
;---- Variable 'msg' assigned to Register 'R6/R7' ----
;---- Variable 'len' assigned to Register 'R8' ----
                                           ; SOURCE LINE # 15
0008 F048          MOV       R4,R8
000A 47F80800      CMPB      RL4,#08H
000E ED0A          JMPR      cc_UGT,?C0002
                                           ; SOURCE LINE # 16
0010         ?C0001:
                                           ; SOURCE LINE # 18
0010 F0A7          MOV       R10,R7
0012 F096          MOV       R9,R6
0014 E028          MOV       R8,#02H
0016 DA000000 E    CALLS     SEG (can_sload),can_sload
                                           ; SOURCE LINE # 19
001A E028          MOV       R8,#02H
001C DA000000 E    CALLS     SEG (can_stx),can_stx
                                           ; SOURCE LINE # 21
0020 DA000000 E    CALLS     SEG (XcpSendCallBack),XcpSendCallBack
                                           ; SOURCE LINE # 22
0024         ?C0002:
0024 DB00          RETS      
             ; FUNCTION XcpCanSend (END    RMASK = @0x7FFF)

             ; FUNCTION ApplXcpInterruptDisable (BEGIN  RMASK = @0x8000)
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 26
0026 DB00          RETS      
             ; FUNCTION ApplXcpInterruptDisable (END    RMASK = @0x8000)

             ; FUNCTION ApplXcpInterruptEnable (BEGIN  RMASK = @0x8000)
                                           ; SOURCE LINE # 28
                                           ; SOURCE LINE # 30
0028 DB00          RETS      
             ; FUNCTION ApplXcpInterruptEnable (END    RMASK = @0x8000)



MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =          42     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
C166 COMPILER V7.57.0, XCP_CAN                                                             12/25/2020 22:12:54 PAGE 3   

  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
