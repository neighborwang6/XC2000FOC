C166 COMPILER V7.57.0, TASK_MAN                                                            12/26/2020 15:24:01 PAGE 1   


C166 COMPILER V7.57.0, COMPILATION OF MODULE TASK_MAN
OBJECT MODULE PLACED IN .\objs\task_man.obj
COMPILER INVOKED BY: C:\Keil_v5\C166\BIN\C166.EXE DTC_Diag\task_man.c MODV2 LARGE BROWSE INCDIR(.\src\hardware;.\src;.\E
                    -OL_Diag;.\DTC_Diag;.\Hw_Driver;.\CalTool;.\DTC_Diag\mcu2_prot;./CAN_Driver;.\xcp;.\src\include;.\EBS_Ctrl_Logic) MODV2 D
                    -EBUG CODE PRINT(.\objs\task_man.lst) TABS(2) OBJECT(.\objs\task_man.obj) 

 stmt lvl     source

    1         ///////////////////////////////////////////////////////////////////////////////
    2         /*
    3         
    4         
    5         */
    6         ///////////////////////////////////////////////////////////////////////////////
    7         #include "task_man.h"
    8         #include "mcu1_imp.h"
    9         #include "prot_imp.h"
   10         #include "ypara.h"
   11         
   12         ///////////////////////////////////////////////////////////////////////////////
   13         u16 trans_actuator_num(u8 act_num,u8 act_on_off);
   14         void update_comp_monitor(u16 comp_cmd);
   15         ///////////////////////////////////////////////////////////////////////////////
   16         extern MCUMSGDAT mcumsgdat;
   17         extern u8 diag_mode;
   18         
   19         // Task info
   20         u8 task_type=TASK_CMD_ACT_NONE;
   21         u8 task_sub_type=0;
   22         u8 task_stat=TASK_STAT_NONE;
   23         u8 task_ctrl_valid=0;
   24         
   25         // Used for task
   26         u8 free_cnt0;
   27         u8 free_cnt1;
   28         
   29         // Monitor all components: max time (10ms ticks) in "ON" state
   30         // Set component OFF when 1->0
   31         u16 comp_toutx[10]={0,0,0,0,0,0,0,0,0,0};
   32         
   33         u8  gmisc_task=TASK_CMD_NONE;
   34         u8  gmisc_task_stat=TASK_STAT_COMPLETE;  // Important to init this value
   35         u8  gmisc_task_option[16];  // RoutineLID,Action,Parameter
   36         u16 gmisc_task_tout=0;
   37         
   38         #define GMISC_LID   gmisc_task_option[0]
   39         #define GMISC_ACT   gmisc_task_option[1]
   40         #define GMISC_PARA0 gmisc_task_option[2]
   41         #define GMISC_PARA1 gmisc_task_option[3]
   42         
   43         #define YMIN(x,y) (((x)>(y))?(y):(x))
   44         #define YMAX(x,y) (((x)>(y))?(x):(y))
   45         
   46         extern u8 dtc_byte[];
   47         
   48         ///////////////////////////////////////////////////////////////////////////////
   49         //
   50         void do_mcu2_task_init(void)
   51         {
   52  1      }
   53         
C166 COMPILER V7.57.0, TASK_MAN                                                            12/26/2020 15:24:01 PAGE 2   

   54         ///////////////////////////////////////////////////////////////////////////////
   55         //
   56         
   57         #define TASK_ID         mcumsgdat.option 
   58         #define TASK_LEN        mcumsgdat.dat[0]
   59         // Bytes after ControlOption
   60         #define TASK_PARA0      mcumsgdat.dat[1]
   61         #define TASK_PARA1      mcumsgdat.dat[2]
   62         #define TASK_PARA2      mcumsgdat.dat[3]
   63         
   64         void do_mcu2_task(void)
   65         {
   66  1      
   67  1      }
   68         
   69         ///////////////////////////////////////////////////////////////////////////////
   70         //
   71         void do_mcu2_task_10ms_hook(void)
   72         {
   73  1      }
   74         ///////////////////////////////////////////////////////////////////////////////
   75         // Translate the Actuator Table to a dedicated bit
   76         // act_on_off: 0 or 1
   77         u16 trans_actuator_num(u8 act_num,u8 act_on_off)
   78         {
   79  1        UNUSED_PARA(act_num);
   80  1        UNUSED_PARA(act_on_off);
   81  1        
   82  1        return 0;
   83  1      }
   84         ///////////////////////////////////////////////////////////////////////////////
   85         //
   86         ///////////////////////////////////////////////////////////////////////////////
   87         void update_comp_monitor(u16 comp_cmd)
   88         {
   89  1        UNUSED_PARA(comp_cmd);
   90  1      }
   91           
   92         ///////////////////////////////////////////////////////////////////////////////
   93         //
   94         ///////////////////////////////////////////////////////////////////////////////
   95         void do_mcu2_taskx_init(void)
   96         {
   97  1      }
   98         
   99         ///////////////////////////////////////////////////////////////////////////////
  100         //
  101         ///////////////////////////////////////////////////////////////////////////////
  102         u8 do_mcu2_taskx(void)
  103         {
  104  1        
  105  1        return 0;
  106  1      }
  107         
  108         ///////////////////////////////////////////////////////////////////////////////
  109         //
  110         ///////////////////////////////////////////////////////////////////////////////
  111         void do_mcu2_taskx_10ms_hook(void)
  112         {
  113  1      
  114  1      }
  115         
C166 COMPILER V7.57.0, TASK_MAN                                                            12/26/2020 15:24:01 PAGE 3   

  116         ///////////////////////////////////////////////////////////////////////////////
  117         //
  118         ///////////////////////////////////////////////////////////////////////////////
C166 COMPILER V7.57.0, TASK_MAN                                                            12/26/2020 15:24:01 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION do_mcu2_task_init (BEGIN  RMASK = @0x8000)
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 52
0000 DB00          RETS      
             ; FUNCTION do_mcu2_task_init (END    RMASK = @0x8000)

             ; FUNCTION do_mcu2_task (BEGIN  RMASK = @0x8000)
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 67
0002 DB00          RETS      
             ; FUNCTION do_mcu2_task (END    RMASK = @0x8000)

             ; FUNCTION do_mcu2_task_10ms_hook (BEGIN  RMASK = @0x8000)
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 73
0004 DB00          RETS      
             ; FUNCTION do_mcu2_task_10ms_hook (END    RMASK = @0x8000)

             ; FUNCTION trans_actuator_num (BEGIN  RMASK = @0x4010)
                                           ; SOURCE LINE # 77
;---- Variable 'act_on_off' assigned to Register 'R9' ----
;---- Variable 'act_num' assigned to Register 'R8' ----
                                           ; SOURCE LINE # 82
0006 E004          MOV       R4,#00H
                                           ; SOURCE LINE # 83
0008 DB00          RETS      
             ; FUNCTION trans_actuator_num (END    RMASK = @0x4010)

             ; FUNCTION update_comp_monitor (BEGIN  RMASK = @0x4000)
                                           ; SOURCE LINE # 87
;---- Variable 'comp_cmd' assigned to Register 'R8' ----
                                           ; SOURCE LINE # 90
000A DB00          RETS      
             ; FUNCTION update_comp_monitor (END    RMASK = @0x4000)

             ; FUNCTION do_mcu2_taskx_init (BEGIN  RMASK = @0x8000)
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 97
000C DB00          RETS      
             ; FUNCTION do_mcu2_taskx_init (END    RMASK = @0x8000)

             ; FUNCTION do_mcu2_taskx (BEGIN  RMASK = @0x0010)
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 105
000E E108          MOVB      RL4,#00H
                                           ; SOURCE LINE # 106
0010 DB00          RETS      
             ; FUNCTION do_mcu2_taskx (END    RMASK = @0x0010)

             ; FUNCTION do_mcu2_taskx_10ms_hook (BEGIN  RMASK = @0x8000)
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 114
0012 DB00          RETS      
             ; FUNCTION do_mcu2_taskx_10ms_hook (END    RMASK = @0x8000)



MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =          20     --------
C166 COMPILER V7.57.0, TASK_MAN                                                            12/26/2020 15:24:01 PAGE 5   

  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =          10     --------
  FAR-DATA SIZE    =          36     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =          68     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
